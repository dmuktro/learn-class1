body {
  background-color: #FFF;
  margin: 0;
  padding: 0;
}

.header {
  background-image: url("https://s3.amazonaws.com/codecademy-content/courses/web-101/unit-5/htmlcss1-img_canyon.jpeg");
  background-position: center center;
  background-size: cover;
  height: 700px;
  width: 100%;
}

/* Add the ID selector to this CSS rule */

#header-text {
  margin: 0 auto;
  position: relative;
  text-align: center;
  top: 25%;
  width: 60%;
}

h1 {
  color: #FFF;
  font-family: 'Quicksand', sans-serif;
  font-size: 70px;
  font-weight: 400;
  line-height: 60px;
  margin: 0;
}

h2 {
  color: #FFF;
  font-family: 'Open Sans', sans-serif;
  text-align: center;
  font-size: 28px;
  font-weight: 100;
}

h3 {
  color: #FFF;
  font-family: 'Quicksand', sans-serif;
  font-size: 28px;
  font-weight: 400;
  line-height: 30px;
  margin: 10px 0px;
  text-align: center;
}

h4 {
  color: #CCC;
  font-family: 'Quicksand', sans-serif;
  font-size: 16px;
  font-weight: 300;
}

p {
  color: white;
  font-family: 'Open Sans', sans-serif;
  font-size: 16px;
  font-weight: 100;
  line-height: 24px;
  margin: 0 auto;
  text-align: center;
  width: 60%;
}

/* Add the class selector to this CSS rule */

.partner {
  padding: 20px;
  margin: 0 auto;
  border-bottom: 1px solid #EEE;
}

.partner img {
  position: relative;
  top: 6px;
}

.aa-logo {
  padding-left: 6px;
}

.main {
  background: url("https://s3.amazonaws.com/codecademy-content/courses/web-101/unit-5/shards.png");
  margin: 0;
  padding: 40px;
}

.value-props {
  margin: 40px auto;
  width: 60%;
}

.prop {
  border: 1px solid #FFF;
  padding: 40px 0px;
  margin: 5px 0px;
}

.prop h2 {
  font-family: 'Quicksand', sans-serif;
  font-size: 24px;
}

.partner, .prop {
    text-align: center;
}

/* 
IDs are great for labeling unique elements, but IDs have a limitation. 
Because unique IDs should not be used 
across multiple HTML elements, they are insufficient for quickly styling elements that should all share a specific style.

CSS offers a solution to this limitation. 
For multiple elements that should share the same styling, classes can be used to label them.
*/

/*
The .breaking selector targets all elements with a class of breaking. 
The p.breaking selector targets only <p> elements with a class of breaking. 
This type of selector allows you to be even more specific about a particular element's styling, 
even when that element must share some styling with other elements.
*/
